generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  phone      String   @unique
  status     Status   @default(ACTIVE)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Space {
  id          Int      @id @default(autoincrement())
  name        String @unique
  description String
  capacity    Int
  status      Status @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reservations Reservation[] 
}

model Client {
  id              Int       @id @default(autoincrement())
  name            String
  cpf             String    @unique
  email           String    @unique
  phone           String    @unique
  birthDate       DateTime
  status          Status   @default(ACTIVE)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  reservations    Reservation[] // <- relação com as reservas (Se quiser pode mudar o nome) - MS
}


model Resource {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  quantity    Int
  status      Status    @default(ACTIVE)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  reservations ReservationResource[]
}

model Reservation {
  id        Int               @id @default(autoincrement())
  clientId  Int
  spaceId   Int
  startDate DateTime
  endDate   DateTime
  status    ReservationStatus @default(OPEN)
  createdAt DateTime          @default(now())
  updatedAt DateTime         @updatedAt
  closedAt  DateTime?         

  client    Client                @relation(fields: [clientId], references: [id])
  space     Space                 @relation(fields: [spaceId], references: [id])
  resources ReservationResource[]
}

model ReservationResource {
  id            Int @id @default(autoincrement())
  reservationId Int
  resourceId    Int

  reservation Reservation @relation(fields: [reservationId], references: [id])
  resource    Resource    @relation(fields: [resourceId], references: [id])
}

enum ReservationStatus {
  OPEN
  APPROVED
  CLOSED
  CANCELED
}

enum Status {
  ACTIVE
  INACTIVE
}


